/*
 * Image Store
 *
 * Image store service provides Albums and Image management operaions
 *
 * API version: 1.0.0
 * Contact: diksha.may14@outlook.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"github.com/gorilla/mux"
	"image-store-service/logger"
	"net/http"
)

// A AddImageApiController binds http requests to an api service and writes the service results to the http response
type AddImageApiController struct {
	service AddImageApiServicer
}

// NewAddImageApiController creates a default api controller
func NewAddImageApiController(s AddImageApiServicer) Router {
	return &AddImageApiController{service: s}
}

// Routes returns all of the api route for the AddImageApiController
func (c *AddImageApiController) Routes() Routes {
	return Routes{
		{
			"AddImage",
			http.MethodPost,
			"/albums/{id}/images",
			c.AddImage,
		},
	}
}

// AddImage - Add an image in an album with the the given id
func (c *AddImageApiController) AddImage(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	id := params["id"]
	addImageRequest := &AddImageRequest{}
	if err := json.NewDecoder(r.Body).Decode(&addImageRequest); err != nil {
		logger.Logger.Error(err)
		w.WriteHeader(http.StatusBadRequest)
		return
	}

	result, err := c.service.AddImage(id, *addImageRequest)
	if err != nil {
		logger.Logger.Error(err)
		w.WriteHeader(http.StatusInternalServerError)
		return
	}

	EncodeJSONResponse(result, http.StatusOK, w)
}
